name: Testing
# This workflow runs the pipeline with the minimal test dataset to check that it completes without any syntax errors
on:
  - release
  - workflow_dispatch

jobs:
  test:
    name: Run workflow tests
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.nxf_edge == 1 }}
    env:
      NXF_VER: ${{ matrix.nxf_ver }}
      NXF_EDGE: ${{ matrix.nxf_edge }}
      NXF_ANSI_LOG: false
      RUN_CONTAINER: ${{ matrix.container_env }}
      RUN_READTYPE: ${{ matrix.read_type }}
      RUN_SKIPPING: ${{ matrix.skipping }}
    strategy:
      matrix:
        nxf_ver: ['20.10.0', '']
        nxf_edge: [ '' ]
        container_env: ['docker', 'singularity', 'podman']
        read_type: ['ont', 'pe']
        skipping: [ '' ]
        include:
          - nxf_ver: ''
            nxf_edge: 1
            container_env: docker
            skipping: ''
            read_type: ont
          - nxf_ver: ''
            nxf_edge: 1
            container_env: docker
            skipping: ''
            read_type: pe
          - nxf_ver: ''
            nxf_edge: ''
            container_env: docker
            skipping: '--skip_filtering'
            read_type: pe
          - nxf_ver: ''
            nxf_edge: ''
            container_env: docker
            skipping: '--skip_filtering'
            read_type: ont
          - nxf_ver: ''
            nxf_edge: ''
            container_env: docker
            skipping: '--skip_assembly'
            read_type: pe
          - nxf_ver: ''
            nxf_edge: ''
            container_env: docker
            skipping: '--skip_assembly'
            read_type: ont
          - nxf_ver: ''
            nxf_edge: ''
            container_env: docker
            skipping:  '--skip_haplotype'
            read_type: pe
          - nxf_ver: ''
            nxf_edge: ''
            container_env: docker
            skipping: '--skip_haplotype'
            read_type: ont
    steps:
      - name: Check out pipeline code
        uses: actions/checkout@v2

      - name: Install Singularity
        if: ${{ env.RUN_CONTAINER == 'singularity' }}
        uses: eWaterCycle/setup-singularity@v6
        with:
          singularity-version: 3.7.1

      - name: Install Podman
        if: ${{ env.RUN_CONTAINER == 'podman' }}
        run: |
          sudo apt-get update
          sudo apt-get -y install podman

      - name: Install Nextflow
        env:
          CAPSULE_LOG: none
        run: |
          wget -qO- get.nextflow.io | bash
          sudo mv nextflow /usr/local/bin/
          [ -n $NXF_EDGE ] && nextflow self-update

      - name: Cache Kraken2 database
        id: kraken2db-cache
        uses: actions/cache@v2
        with:
          path: /kraken2-db
          key: kraken2db-${{ hashFiles('/kraken2-db/inspect.txt') }}

      - name: Download Kraken2 database
        if: ${{ steps.kraken2db-cache.outputs.cache-hit != 'true' }}
        run: |
          sudo mkdir /kraken2-db
          wget -qO- https://genome-idx.s3.amazonaws.com/kraken/k2_viral_20210517.tar.gz | sudo tar xzv -C /kraken2-db

      - name: Run pipeline with test data
        env:
          NCBI_API_KEY: ${{ secrets.NCBI_API_KEY }}
        run: |
          nextflow run ${GITHUB_WORKSPACE} -profile test${RUN_READTYPE},${RUN_CONTAINER} $RUN_SKIPPING --kraken2_db /kraken2-db
