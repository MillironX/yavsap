# Output

You ran the pipeline, but now what? Here is the description of the pipeline
outputs and where to find them, but first...

## The Visualizer

If you like pictures, hate juggling files into various Java applications, and
are OCD about having everything in one spot, then we have you covered. The
pipeline outputs its own web application with every run that allows you to view,
interact with, and download nearly every output file.

To get started with The Visualizer, you'll need [a web
server](https://developer.mozilla.org/en-US/docs/Learn/Common_questions/set_up_a_local_testing_server#running_a_simple_local_http_server).
To learn how to use The Visualizer, click the question mark in the bottom-left
corner of the web page.

## File Output

You don't like all the fluff, huh? Here's the lowdown on the file structure you
can expect from each pipeline run.

### Visualizer Data

All the following files and folders are for powering the Visualizer: if you want
to use The Visualizer on another machine, you will need to take them all to the
other computer in the exact same folder structure.

```text
results
└── 📁 reference
    ├── 📝 pig-serum.bam
    ├── 📝 pig-serum.bam.bai
    ├── 📝 pig-feces.bam
    ├── 📝 pig-feces.bam.bai
    ├── 📝 index.html
    ├── 📝 krona.html
    ├── 📝 multiqc_report.html
    ├── 📝 nextflow_report.html
    ├── 📝 reference.fasta
    └── 📝 reference.fasta.fai
```

### Reference Genome

The pulled reference genome in fasta format can be found in the `reference`
folder, as well as its samtools index, under the names `result.fasta` and
`result.fasta.fai`, respectively.

```text
results
└── 📁 reference
    ├── 📝 results.fasta
    └── 📝 results.fasta.fai
```

### Classification Reports

The read classification report generated by Kraken2 that is used to filter host
reads can be found for each sample in the `classification` folder under the
filename `<samplename>.kreport`.

```text
results
└── 📁 classification
    ├── 📝 pig-serum.kreport
    └── 📝 pig-feces.kreport
```

### Alignments

Alignments for each sample against the reference genome passed to {ref}`--genome <Reference Genome Options>` can be found in the `alignment` folder in the BAM
format, as well as their sidecar index files. Alignments for each sample against
its closest match in the {ref}`--genome_list <Reference Genome Options>` can be
found in the `realignment` folder. Files are always in the `<samplename>.bam`
and `<samplename>.bam.bai` naming scheme.

```text
results
├── 📁 alignment
|   ├── 📝 pig-serum.bam
|   ├── 📝 pig-serum.bam.bai
|   ├── 📝 pig-feces.bam
|   └── 📝 pig-feces.bam.bai
└── 📁 realignment
    ├── 📝 pig-serum.bam
    ├── 📝 pig-serum.bam.bai
    ├── 📝 pig-feces.bam
    └── 📝 pig-feces.bam.bai
```

### Consensus Sequences

Consensus sequences for each sample are output to the `consensus` folder. The
filename is always `<samplename>.fasta`.

```text
results
└── 📁 consensus
    ├── 📝 pig-serum.fasta
    └── 📝 pig-feces.fasta
```

### Variant Calls

Variant calls for each sample are output to the `variants` folder. The
filename is always `<samplename>.vcf`.

```text
results
└── 📁 variants
    ├── 📝 pig-serum.vcf
    └── 📝 pig-feces.vcf
```

### Haplotypes

Haplotypes for each sample are output to the `haplotypes` folder. There is a a
fasta file containing the mutated sequences, and also a data file in YAML format
describing the haplotypes. The filename is always
`<samplename>.<ext>`.

```text
results
└── 📁 haplotypes
    ├── 📝 pig-serum.fasta
    ├── 📝 pig-serum.yaml
    ├── 📝 pig-feces.fasta
    └── 📝 pig-feces.yaml
```

### Multi-alignment and Phylogenetic Trees

The alignments of the comparison genomes, consensus sequences, and haplotypes in
fasta format are contained in the `alignment.fas` file in the `phylogenetics`
folder. Phylogenetic trees of theses comparison genomes, consensus sequences,
and haplotypes in Newick format are contained in the same folder in the file
`tree.nwk`.

```text
results
└── 📁 phylogenetics
    ├── 📝 alignment.fas
    └── 📝 tree.nwk
```

### Diagnostics

Pipeline runtime reports can be found in the `.trace` folder by default, but
this can be modified using the {ref}`--tracedir <Input/Output Options>`
parameter. Four types of Nextflow traces are output.

- {ref}`Execution reports <execution-report>`
- {ref}`Execution timelines <timeline-report>`
- {ref}`Process traces <trace-report>`
- {ref}`Process graphs <dag-visualisation>`

These reports are specific to each time the pipeline is launched, and have the
date and time of execution appended, e.g.
`execution_trace_2021-10-01_12-00-00.html`.

```text
results
└── 📁 .trace
    ├── 📝 execution_timeline_2021-09-01_12-00-00.html
    ├── 📝 execution_timeline_2021-10-01_12-00-00.html
    ├── 📝 execution_trace_2021-09-01_12-00-00.txt
    ├── 📝 execution_trace_2021-10-01_12-00-00.txt
    ├── 📝 pipeline_dag_2021-09-01_12-00-00.svg
    └── 📝 pipeline_dag_2021-09-01_12-00-00.svg
```

The latest execution report is saved to the `report/nextflow_report.html` file,
instead, and will be included in {ref}`The Visualizer`.
