import java.time.*
Date now = new Date()

process {
    errorStrategy = 'finish'
    withName: reference_genome_pull_fasta {
        container = 'docker://ncbi/edirect:12.5'
    }
    withName: reference_genome_pull_genbank {
        container = 'docker://ncbi/edirect:12.5'
    }
    withName: reference_genome_index_bowtie {
        container = 'docker://biocontainers/bowtie2:v2.4.1_cv1'
    }
    withName: reference_genome_index_samtools {
        container = 'docker://staphb/samtools:1.12'
    }
    withName: reference_genome_annotate {
        conda = 'bioconda::emboss=6.6.0'
    }
    withName: read_trimming {
        container = 'docker://staphb/trimmomatic:0.39'
    }
    withName: read_classification {
        container = 'docker://staphb/kraken2:2.1.2-no-db'
        memory = '100 GB'
    }
    withName: read_filtering {
        conda = 'bioconda::krakentools=1.2'
    }
    withName: assembly_ont {
        container = 'docker://staphb/canu:2.1.1'
    }
    withName: assembly_pe {
        container = 'docker://staphb/spades:3.15.2'
    }
    withName: contigs_convert_to_fastq {
        container = 'staphb/seqtk:1.3'
    }
    withName: contigs_realign_to_reference {
        container = 'docker://biocontainers/bowtie2:v2.4.1_cv1'
    }
    withName: reads_realign_to_reference {
        container = 'docker://biocontainers/bowtie2:v2.4.1_cv1'
    }
    withName: alignment_sort_and_index {
        container = 'docker://staphb/samtools:1.12'
    }
    withName: variants_calling_ivar {
        container = 'docker://staphb/ivar:1.3'
    }
    withName: variants_calling_varscan {
        container = 'library://millironx/default/varscan:v2.4.4'
    }
    withName: variants_calling_lofreq {
        conda = 'bioconda::lofreq=2.1.3.1'
    }
    withName: variants_calling_bcftools {
        container = 'staphb/bcftools:1.12'
    }
    withName: variants_calling_snippy {
        container = 'staphb/snippy:4.6.0'
    }
    withName: multimutation_search {
        errorStrategy = 'retry'
        maxRetries = 2
        container = 'library://millironx/default/julia:1.6.1'
    }
}
singularity {
    enabled = true
}
params {
    ont            = false
    pe             = false
    dev            = false
    devinputs      = 2
    genomeId       = 'NC_001437'
    help           = false
    outfolder      = ""
    readsfolder    = "."
    runname        = "jev-analysis"
    kmerLength     = 21
    velvetInsLength = 200
    velvetMinContigLen = 150
    // Although I haven't seen it documented anywhere, 0 is unclassified reads
    // and 10239 is viral reads
    taxIdsToKeep   = '0 10239'
    threads        = 4
    tracedir       = '.trace'
    timestamp      = now.format('yyyyMMdd-HH-mm-ss')
    trimAdapters   = 'NexteraPE-PE.fa'
    trimMismatches = 2
    trimPclip      = 30
    trimClip       = 10
    trimWinsize    = 0
    trimWinqual    = 0
    trimLeading    = 0
    trimTrailing   = 0
    trimCrop       = 0
    trimHeadcrop   = 0
    trimMinlen     = 0
}
timeline {
    enabled = true
    file = "${params.tracedir}/${params.timestamp}_timeline.html"
}
report {
    enabled = true
    file = "${params.tracedir}/${params.timestamp}_report.html"
}
trace {
    enabled = true
    file = "${params.tracedir}/${params.timestamp}_trace.txt"
}
dag {
    enabled = true
    file = "${params.tracedir}/${params.timestamp}_dag.svg"
}
